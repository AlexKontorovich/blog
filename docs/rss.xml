<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lean community blog</title><link>https://leanprover-community.github.io/blog/</link><description>This is the blog of the Lean prover community.</description><atom:link href="https://leanprover-community.github.io/blog/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;The Lean prover community&lt;/a&gt; </copyright><lastBuildDate>Mon, 26 May 2025 20:42:50 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Simprocs for the Working Mathematician</title><link>https://leanprover-community.github.io/blog/posts/simprocs-for-the-working-mathematician/</link><dc:creator>Yaël Dillies, Paul Lezeau</dc:creator><description>&lt;div&gt;&lt;p&gt;Lean v4.6.0 (back in February 2024!) added support for custom simplification procedures, aka &lt;em&gt;simprocs&lt;/em&gt;.
This blog post is the first in a series of two aimed at explaining what a simproc is, what kind of problems can be solved with simprocs, and what tools we have to write them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/simprocs-for-the-working-mathematician/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>meta</category><category>simp</category><category>simproc</category><guid>https://leanprover-community.github.io/blog/posts/simprocs-for-the-working-mathematician/</guid><pubDate>Mon, 26 May 2025 14:00:00 GMT</pubDate></item><item><title>Durham Computational Algebraic Geometry Workshop</title><link>https://leanprover-community.github.io/blog/posts/durham-algebraic-geometry-workshop/</link><dc:creator>Harald Carlens</dc:creator><description>&lt;div&gt;&lt;p&gt;A group effort to formalise some algebraic geometry in Lean. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/durham-algebraic-geometry-workshop/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/durham-algebraic-geometry-workshop/</guid><pubDate>Mon, 25 Nov 2024 17:00:00 GMT</pubDate></item><item><title>Basic probability in Mathlib</title><link>https://leanprover-community.github.io/blog/posts/basic-probability-in-mathlib/</link><dc:creator>Rémy Degenne</dc:creator><description>&lt;div&gt;&lt;p&gt;How do I define a probability space and two independent random variables in Lean? Should I use &lt;code&gt;IsProbabilityMeasure&lt;/code&gt; or &lt;code&gt;ProbabilityMeasure&lt;/code&gt;?
How do I condition on an event?&lt;/p&gt;
&lt;p&gt;This post answers these and other simple questions about how to express probability concepts using Mathlib.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/basic-probability-in-mathlib/"&gt;Read more…&lt;/a&gt; (12 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/basic-probability-in-mathlib/</guid><pubDate>Thu, 17 Oct 2024 14:41:48 GMT</pubDate></item><item><title>Announcing the ∞-Cosmos Project</title><link>https://leanprover-community.github.io/blog/posts/infinity-cosmos-announcement/</link><dc:creator>Emily Riehl</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://github.com/emilyriehl"&gt;Emily Riehl&lt;/a&gt; introduces the &lt;a href="https://github.com/emilyriehl/infinity-cosmos"&gt;∞-Cosmos Project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/infinity-cosmos-announcement/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>∞-Cosmos</category><guid>https://leanprover-community.github.io/blog/posts/infinity-cosmos-announcement/</guid><pubDate>Tue, 17 Sep 2024 18:00:00 GMT</pubDate></item><item><title>This month in Mathlib (May 2024)</title><link>https://leanprover-community.github.io/blog/posts/month-in-mathlib/2024/month-in-mathlib-may-2024/</link><dc:creator>Mathlib community</dc:creator><description>&lt;div&gt;&lt;p&gt;The last Month in Mathlib posts date from before the port started, in November 2022. We apologise for the momentary disappearance. We aim to keep it a monthly occurrence from now on.&lt;/p&gt;
&lt;p&gt;There were 667 PRs merged in May 2024.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/month-in-mathlib/2024/month-in-mathlib-may-2024/"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/month-in-mathlib/2024/month-in-mathlib-may-2024/</guid><pubDate>Mon, 01 Jul 2024 12:00:00 GMT</pubDate></item><item><title>The Fermat's Last Theorem Project</title><link>https://leanprover-community.github.io/blog/posts/FLT-announcement/</link><dc:creator>Kevin Buzzard</dc:creator><description>&lt;div&gt;&lt;p&gt;Kevin Buzzard discusses the project to prove Fermat's Last Theorem in Lean.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/FLT-announcement/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/FLT-announcement/</guid><pubDate>Tue, 30 Apr 2024 18:00:00 GMT</pubDate></item><item><title>The first official release of Lean 4</title><link>https://leanprover-community.github.io/blog/posts/first-lean-release/</link><dc:creator>Scott Morrison</dc:creator><description>&lt;div&gt;&lt;p&gt;Lean 4 has just made its first official stable release, with the arrival of &lt;a href="https://github.com/leanprover/lean4/releases/tag/v4.0.0"&gt;&lt;code&gt;v4.0.0&lt;/code&gt;&lt;/a&gt;.
We're excited to transition from only providing nightly releases to having regular stable releases.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/first-lean-release/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/first-lean-release/</guid><pubDate>Fri, 08 Sep 2023 05:58:40 GMT</pubDate></item><item><title>My Experience at the Machine-Checked Mathematics workshop</title><link>https://leanprover-community.github.io/blog/posts/lorentz-center-meeting/</link><dc:creator>Jana Göken</dc:creator><description>&lt;div&gt;&lt;p&gt;Hello, everyone! My name is Jana Göken, a master's student in mathematics from Bremen. Today, I want to share with you my experiences at the &lt;a href="https://www.lorentzcenter.nl/machine-checked-mathematics.html"&gt;Machine-Checked Mathematics workshop&lt;/a&gt; that introduced me to the world of proof assistants, specifically Lean.
The workshop took place in Leiden from July 10th to July 14th 2023, and it was an amazing and educational journey.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/lorentz-center-meeting/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/lorentz-center-meeting/</guid><pubDate>Sat, 26 Aug 2023 14:30:00 GMT</pubDate></item><item><title>Formalising cohomology theories</title><link>https://leanprover-community.github.io/blog/posts/banff-cohomology/</link><dc:creator>Kevin Buzzard</dc:creator><description>&lt;div&gt;&lt;p&gt;Kevin Buzzard rounds up the BIRS conference on formalising cohomology theories.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/banff-cohomology/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/banff-cohomology/</guid><pubDate>Mon, 12 Jun 2023 07:42:45 GMT</pubDate></item><item><title>Modular forms</title><link>https://leanprover-community.github.io/blog/posts/modular-forms/</link><dc:creator>Chris Birkbeck</dc:creator><description>&lt;div&gt;&lt;p&gt;In &lt;a href="https://github.com/leanprover-community/mathlib/pull/13250"&gt;PR# 13250&lt;/a&gt; we define modular forms and cusp forms, and prove that they form complex vector spaces. These are analytic functions of number theoretic interest with strong links to geometry, representation theory and analysis. Most famously they are a key ingredient in the proof of Fermat's Last Theorem. In this post we discuss the formalization process, motivate some design choices and map out some future work.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://leanprover-community.github.io/blog/posts/modular-forms/"&gt;Read more…&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://leanprover-community.github.io/blog/posts/modular-forms/</guid><pubDate>Wed, 21 Dec 2022 11:41:21 GMT</pubDate></item></channel></rss>